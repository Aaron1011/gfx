name: CI

on:
  push:
    branches-ignore: [staging.tmp]
  pull_request:
    branches-ignore: [staging.tmp]

jobs:
  ios_build:
    name: iOS Stable
    runs-on: macos-10.15
    env:
      TARGET: aarch64-apple-ios
    steps:
      - uses: actions/checkout@v2
      - name: Prepare Rust
        run: rustup target add ${{ env.TARGET }}
      - run: cargo check --manifest-path src/backend/metal/Cargo.toml --target ${{ env.TARGET }}

  android_build:
    name: Android Stable
    runs-on: ubuntu-18.04
    env:
      TARGET: aarch64-linux-android
    steps:
      - uses: actions/checkout@v2
      - name: Prepare Rust
        run: rustup target add ${{ env.TARGET }}
      - run: cargo check --manifest-path src/backend/vulkan/Cargo.toml --target ${{ env.TARGET }}
      - name: Prepare EGL
        run: |
          sudo apt-get update -y -qq
          sudo apt-get install -y -qq libegl1-mesa-dev
          echo "$ANDROID_HOME/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/bin" >> $GITHUB_PATH
      - run: cargo check --manifest-path src/backend/gl/Cargo.toml --target ${{ env.TARGET }}

  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name:
          [
            MacOS Stable,
            MacOS Nightly,
            Ubuntu Stable,
            Ubuntu Nightly,
            Windows Stable,
            Windows Nightly,
          ]
        include:
          - os: macos-10.15
            name: MacOS Stable
            channel: stable
            additional_command: cd src/backend/metal && cargo check --all-features
          - os: macos-10.15
            name: MacOS Nightly
            channel: nightly
            additional_command:
          - os: ubuntu-18.04
            name: Ubuntu Stable
            channel: stable
            additional_command:
          - os: ubuntu-18.04
            name: Ubuntu Nightly
            channel: nightly
            additional_command:
          - os: windows-2019
            name: Windows Stable
            channel: stable
            additional_command:
          - os: windows-2019
            name: Windows Nightly
            channel: nightly
            additional_command:
    steps:
      - uses: actions/checkout@v2
      - if: matrix.channel == 'nightly'
        name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - if: matrix.os == 'windows-2019'
        name: Install make
        run: choco install make
      #- if: matrix.channel == 'stable'
      #  run: rustup component add clippy
        # build with no features first
      - run: make all
      - if: matrix.additional_command != ''
        name: Check extra features
        run: ${{ matrix.additional_command }}
